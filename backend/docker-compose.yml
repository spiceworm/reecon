name: "reecon-backend"

services:
  # This is the base image that all other services are built off of.
  # It runs once to build the base image containing python package required
  # for child images.
  reecon:
    image: "reecon:${VERSION}"
    build:
      args:
        VERSION: "${VERSION}"
      context: "./reecon"
    environment:
      VERSION: "${VERSION}"
    restart: "no"

  service:
    image: "${REGISTRY_URL}/${CONTAINER_REPO}/${APP_NAME}/service:${VERSION}"
    build:
      args:
        VERSION: "${VERSION}"
      context: "./service"
    depends_on:
      reecon:
        condition: service_completed_successfully
    environment: &shared_env
      DEBUG: "${DEBUG}"
      LOG_LEVEL: "${LOG_LEVEL}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_HOST: "${POSTGRES_HOST}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_PORT: "${POSTGRES_PORT}"
      POSTGRES_SSL: "${POSTGRES_SSL}"
      POSTGRES_USER: "${POSTGRES_USER}"
      REDIS_HOST: "${REDIS_HOST}"
      REDDIT_BOT_CLIENT_ID: "${REDDIT_BOT_CLIENT_ID}"
      REDDIT_BOT_CLIENT_SECRET: "${REDDIT_BOT_CLIENT_SECRET}"
      REDDIT_BOT_PASSWORD: "${REDDIT_BOT_PASSWORD}"
      REDDIT_BOT_USER_AGENT: "${REDDIT_BOT_USER_AGENT}"
      REDDIT_BOT_USERNAME: "${REDDIT_BOT_USERNAME}"
      SECRET_KEY: "${SECRET_KEY}"
      VERSION: "${VERSION}"
    volumes:
      - "./service:/service"

  server:
    image: "${REGISTRY_URL}/${CONTAINER_REPO}/${APP_NAME}/server:${VERSION}"
    build:
      args:
        VERSION: "${VERSION}"
      context: "./server"
    depends_on:
      reecon:
        condition: service_completed_successfully
    environment:
      <<: *shared_env
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      APP_NAME: "${APP_NAME}"
      DEFAULT_OPENAI_API_KEY: "${DEFAULT_OPENAI_API_KEY}"
      REDDIT_API_CLIENT_ID: "${REDDIT_API_CLIENT_ID}"
      REDDIT_API_CLIENT_SECRET: "${REDDIT_API_CLIENT_SECRET}"
      REDDIT_API_USER_AGENT: "${REDDIT_API_USER_AGENT}"
    ports:
      - "8888:80"
    volumes:
      - "./server:/server"

  worker:
    image: "${REGISTRY_URL}/${CONTAINER_REPO}/${APP_NAME}/worker:${VERSION}"
    build:
      args:
        VERSION: "${VERSION}"
      context: "./worker"
    depends_on:
      reecon:
        condition: service_completed_successfully
    deploy:
      mode: replicated
      replicas: 1
    environment:
      <<: *shared_env
    volumes:
      - "./worker:/worker"

  db:
    # match digitalocean "postgresql" db version
    image: "postgres:16.6-bookworm"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
    volumes:
      - "/data/${APP_NAME}/db:/var/lib/postgresql/data"
    networks:
      default:
        aliases:
          - "db"

  redis:
    # match digitalocean "caching" db version
    image: "redis:7.2.6-bookworm"
    hostname: "redis"
    volumes:
      - "/data/${APP_NAME}/redis:/data"
